# -*- coding: utf-8 -*-
"""
/***************************************************************************
 N200DocCreatorDialog
                                 A QGIS plugin
 Plugin serves for creating data according to "Standard to collect spatial data for Plans of Protective Actions on Natura 2000 sites", export them, and create maps based on them.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-05-11
        git sha              : $Format:%H$
        copyright            : (C) 2023 by Emil Kielar
        email                : kielaremil@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.gui import QgsMapLayerComboBox
from qgis.PyQt import QtWidgets
from PyQt5.QtWidgets import QMainWindow, QPushButton, QVBoxLayout
from qgis.core import QgsRelation, QgsProject

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'n_doc_creator_dialog_base.ui'))


class N200DocCreatorDialog(QtWidgets.QDialog, QMainWindow,FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(N200DocCreatorDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
        
